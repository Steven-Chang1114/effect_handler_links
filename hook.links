# alien javascript "js/hook.js" btnOnCLick : () ~%~> ();

fun getNum() {
    do GetNum()
}

fun getNumPrev() {
    do GetNumPrev()
}

fun setNum(val) {
    do SetNum(val)
}

fun setNumPrev(val) {
    var newVal = getNumPrev() + val;
    do SetNumPrev(newVal)
}

fun useState(m) client {
    handle(m())(globalVar <- (num = 0, numPrev = 5)) {
        case SetNum(val, k) -> k(replaceNode(<div id="num">{intToXml(val)}</div>,getNodeById("num")), 
                                (globalVar with num = val))
        case GetNum(k) -> k(globalVar.num, globalVar)

        case SetNumPrev(val, k) -> k(replaceNode(<div id="numPrev">{intToXml(val)}</div>,getNodeById("numPrev")),
                                    (globalVar with numPrev = val))
        case GetNumPrev(k) -> k(globalVar.numPrev, globalVar)

        case Return(x) -> x
    }
}

fun manager() client {
    receive {
        case SetNum(val) -> setNum(val)
        case SetNumPrev(val) -> setNumPrev(val)
    };
    manager()
} 

fun mainPage() {
    var p = spawnClient { useState(manager) };
    page
        <html>
            <body>
                <div>
                    <div id="num">{intToXml(0)}</div>
                    <input 
                        type="button" 
                        value="set number to 1" 
                        l:onclick="{p ! SetNum(1)}"/>
                    <input 
                        type="button" 
                        value="set number to 2" 
                        l:onclick="{p ! SetNum(2)}"/>
                </div>

                <div>
                    <div id="numPrev">{intToXml(100)}</div>
                    <input 
                        type="button" 
                        value="sub number by 1" 
                        l:onclick="{p ! SetNumPrev(-1)}"/>
                    <input 
                        type="button" 
                        value="add number by 1" 
                        l:onclick="{p ! SetNumPrev(1)}"/>
                </div>
            </body>
        </html>
}

fun main() {
  addRoute("/", fun(_) { mainPage() });
  addStaticRoute("/js", "js", [("js", "text/javascript")]);
  servePages()
}

main()