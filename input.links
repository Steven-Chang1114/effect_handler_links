module Test {
  alien javascript "js/demo.js" {
    printResult : (String) ~%~> ();
    setInput : (String) ~%~> ();
  }
}

fun showResultPrio(val) {
    do ShowTypePrio(val);
    do ShowResultPrio(val)
}

fun useState(m) client {
    handle(m()) {
        case ShowTypePrio(val, k) -> k(Test.setInput(val))
        case ShowResultPrio(val, k) -> k(Test.printResult(val))
        case Return(x) -> x
    }
}

fun manager() client {
    receive {
        case ShowResult(val) -> Test.setInput(val); Test.printResult(val)
        case ShowResultPrio(val) -> showResultPrio(val)
    };
    manager()
} 

fun mainPage() {
    var p = spawnClient { 
        useState(manager)
    };
    page
        <html>
            <body>
                Without priority: 
                <form l:onkeyup="{p ! ShowResult(pre)}">
                    <input type="text" l:name="pre"
                        id="input" autocomplete="off"/>
                </form>
                With priority: 
                <form l:onkeyup="{p ! ShowResultPrio(pre)}">
                    <input type="text" l:name="pre"
                        id="inputPrio" autocomplete="off"/>
                </form>
                <div id="result"></div>
            </body>
        </html>
}

fun main() {
  addRoute("/", fun(_) { mainPage() });
  addStaticRoute("/js", "js", [("js", "text/javascript")]);
  servePages()
}

main()